#! /usr/bin/env python
#*  All rights reserved.
#*
#*  Redistribution and use in source and binary forms, with or without
#*  modification, are permitted provided that the following conditions
#*  are met:
#*
#*   * Redistributions of source code must retain the above copyright
#*     notice, this list of conditions and the following disclaimer.
#*   * Redistributions in binary form must reproduce the above
#*     copyright notice, this list of conditions and the following
#*     disclaimer in the documentation and/or other materials provided
#*     with the distribution.
#*   * Neither the name of the Willow Garage nor the names of its
#*     contributors may be used to endorse or promote products derived
#*     from this software without specific prior written permission.
#*
#*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#*  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#*  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
#*  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
#*  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#*  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
#*  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#*  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#*  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#*  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#*  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#*  POSSIBILITY OF SUCH DAMAGE.
#***********************************************************

# Author: 

PACKAGE='iri_platform_teleop'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# joy_enum = gen.enum([ gen.const("ps3",     int_t, 0, "PlayStation3 Dualshock3 controller"),
#                       gen.const("wiimote", int_t, 1, "wii remote controller")],
#                      "An enum to set joy type")

# gen.add("joy_type",                   int_t,    0, "Choose which controller to use",                            0,   0,   1, edit_method=joy_enum)
#Name Type Reconfiguration level  Description Default Min Max
gen.add("joy_watchdog_time",          double_t, 0, "Maximum time (seconds) between joy msgs",                 1.0, 0.1, 3.0)

gen.add("translation_increment_step", double_t, 0, "Translational platform velocity increment step in [m/s]", 0.1, 0.0, 0.2)
gen.add("rotation_increment_step",    double_t, 0, "Rotational platform velocity increment step in [rad/s]",  0.1, 0.0, 0.2)

gen.add("max_translation_speed",      double_t, 0, "Maximum translational speed in [m/s]",                    0.5, 0.0, 1.5)
gen.add("max_rotation_speed",         double_t, 0, "Maximum rotational speed in [rad/s]",                     0.5, 0.0, 1.5)
gen.add("cancel_goal",                bool_t,   0,"Cancel navigation goal when teleoperating ",              False)

exit(gen.generate(PACKAGE, "PlatformTeleopAlgorithm", "PlatformTeleop"))
